defmodule Siftsciex.Validation.Gateway do
  @moduledoc """
  Payments are typically processed by Gateways, this module manages the list of "known" gateways and provides simple logic for checking if a value is a supported Gateway.
  """

  @gateways MapSet.new([
    "acapture",
    "adyen",
    "affirm",
    "afterpay",
    "alipay",
    "altapay",
    "amazon_payments",
    "android_iap",
    "android_pay",
    "apple_iap",
    "apple_pay",
    "astropay",
    "authorizenet",
    "avangate",
    "balanced",
    "banorte",
    "banwire",
    "barclays",
    "beanstream",
    "billdesk",
    "bitgo",
    "bitpay",
    "blockchain",
    "bluepay",
    "bluesnap",
    "bnpparibas",
    "boacompra",
    "braintree",
    "bread",
    "buckaroo",
    "cardconnect",
    "ccavenue",
    "chain_commerce",
    "chase_paymentech",
    "checkoutcom",
    "cielo",
    "citrus_pay",
    "clearsettle",
    "clearcommerce",
    "cloudpayments",
    "cofinoga",
    "coinbase",
    "collector",
    "compropago",
    "conekta",
    "credsystem",
    "cuentadigital",
    "culqi",
    "cybersource",
    "datacash",
    "debitway",
    "democracy_engine",
    "dibs",
    "digital_river",
    "dotpay",
    "dragonpay",
    "ecopayz",
    "edgil_payway",
    "elavon",
    "empcorp",
    "epayeu",
    "eprocessing_network",
    "esitef",
    "euteller",
    "eway",
    "e_xact",
    "first_atlantic_commerce",
    "first_data",
    "getnet",
    "g2apay",
    "giropay",
    "globalcollect",
    "global_payments",
    "global_payways",
    "gmopg",
    "gocardless",
    "gocoin",
    "hdfc_fssnet",
    "hipay",
    "ideal",
    "ikajo",
    "ingenico",
    "instamojo",
    "interac",
    "internetsecure",
    "intuit_quickbooks_payments",
    "isignthis",
    "iugu",
    "iyzico",
    "jabong",
    "juspay",
    "kash",
    "klarna",
    "kushki",
    "lemonway",
    "limelight",
    "logon",
    "mastercard_payment_gateway",
    "masterpass",
    "maxipago",
    "maxpay",
    "meikopay",
    "mercadopago",
    "merchant_esolutions",
    "midtrans",
    "mirjeh",
    "moip",
    "mollie",
    "moneris_solutions",
    "moneygram",
    "mpesa",
    "multibanco",
    "netbilling",
    "netregistry",
    "neteller",
    "network_for_good",
    "nicepay",
    "nmi",
    "ogone",
    "okpay",
    "omise",
    "openpaymx",
    "optimal_payments",
    "pagar_me",
    "pagofacil",
    "pagseguro",
    "paxum",
    "pay_zone",
    "payeer",
    "payfast",
    "payflow",
    "paygate",
    "payjunction",
    "paylike",
    "paymentwall",
    "payment_express",
    "paymill",
    "payone",
    "payoneer",
    "paypal",
    "paypal_express",
    "paysafecard",
    "paysera",
    "paysimple",
    "paystation",
    "paytm",
    "paytrace",
    "paytrail",
    "payture",
    "payu",
    "payulatam",
    "payvector",
    "payza",
    "peach_payments",
    "perfect_money",
    "pinpayments",
    "pivotal_payments",
    "planet_payment",
    "poli",
    "princeton_payment_solutions",
    "prismpay",
    "processing",
    "przelewy24",
    "psigate",
    "pulse",
    "qiwi",
    "quickpay",
    "raberil",
    "rakuten_checkout",
    "ratepay",
    "razorpay",
    "rbkmoney",
    "rede",
    "redpagos",
    "redsys",
    "rewardspay",
    "rietumu",
    "rocketgate",
    "safecharge",
    "safetypay",
    "sagepay",
    "samsung_pay",
    "securionpay",
    "securepay",
    "sermepa",
    "shopify_payments",
    "simplify_commerce",
    "skrill",
    "smart2pay",
    "smartcoin",
    "sofort",
    "splash_payments",
    "sps_decidir",
    "square",
    "stone",
    "stripe",
    "swedbank",
    "synapsepay",
    "telerecargas",
    "tnspay",
    "towah",
    "tpaga",
    "transact_pro",
    "transfirst",
    "trustcommerce",
    "trustly",
    "tu_compra",
    "twoc2p",
    "twocheckout",
    "unionpay",
    "usa_epay",
    "vantiv",
    "venmo",
    "veritrans",
    "versapay",
    "vesta",
    "vindicia",
    "virtual_card_services",
    "visa",
    "vme",
    "vpos",
    "webmoney",
    "webpay_oneclick",
    "wepay",
    "western_union",
    "wirecard",
    "worldpay",
    "worldspan",
    "xipay",
    "yandex_money",
    "zipmoney",
    "zooz_paymentsos"
  ])

  @doc """
  Checks to see if the given Gateway is "known"/"supported"

  ## Parameters

    - `gateway`: The name to be checked

  ## Examples

      iex> Gateway.supported?("xipay")
      true

      iex> Gateway.supported?("ripoff")
      false

  """
  @spec supported?(String.t) :: boolean
  def supported?(gateway) do
    MapSet.member?(@gateways, gateway)
  end
end
